
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class npcCfg : Luban.BeanBase
{
    public npcCfg(JSONNode _buf) 
    {
        { if(!_buf["ID"].IsNumber) { throw new SerializationException(); }  ID = _buf["ID"]; }
        { if(!_buf["NPC_Name"].IsString) { throw new SerializationException(); }  NPCName = _buf["NPC_Name"]; }
        { if(!_buf["NPC_ResPath"].IsString) { throw new SerializationException(); }  NPCResPath = _buf["NPC_ResPath"]; }
        { if(!_buf["NPC_Transform_Position_X"].IsNumber) { throw new SerializationException(); }  NPCTransformPositionX = _buf["NPC_Transform_Position_X"]; }
        { if(!_buf["NPC_Transform_Position_Y"].IsNumber) { throw new SerializationException(); }  NPCTransformPositionY = _buf["NPC_Transform_Position_Y"]; }
        { if(!_buf["NPC_Transform_Position_Z"].IsNumber) { throw new SerializationException(); }  NPCTransformPositionZ = _buf["NPC_Transform_Position_Z"]; }
        { if(!_buf["NPC_Transform_Rotation_X"].IsNumber) { throw new SerializationException(); }  NPCTransformRotationX = _buf["NPC_Transform_Rotation_X"]; }
        { if(!_buf["NPC_Transform_Rotation_Y"].IsNumber) { throw new SerializationException(); }  NPCTransformRotationY = _buf["NPC_Transform_Rotation_Y"]; }
        { if(!_buf["NPC_Transform_Rotation_Z"].IsNumber) { throw new SerializationException(); }  NPCTransformRotationZ = _buf["NPC_Transform_Rotation_Z"]; }
        { if(!_buf["NPC_Transform_Scale_X"].IsNumber) { throw new SerializationException(); }  NPCTransformScaleX = _buf["NPC_Transform_Scale_X"]; }
        { if(!_buf["NPC_Transform_Scale_Y"].IsNumber) { throw new SerializationException(); }  NPCTransformScaleY = _buf["NPC_Transform_Scale_Y"]; }
        { if(!_buf["NPC_Transform_Scale_Z"].IsNumber) { throw new SerializationException(); }  NPCTransformScaleZ = _buf["NPC_Transform_Scale_Z"]; }
    }

    public static npcCfg DeserializenpcCfg(JSONNode _buf)
    {
        return new npcCfg(_buf);
    }

    public readonly int ID;
    public readonly string NPCName;
    public readonly string NPCResPath;
    public readonly float NPCTransformPositionX;
    public readonly float NPCTransformPositionY;
    public readonly float NPCTransformPositionZ;
    public readonly float NPCTransformRotationX;
    public readonly float NPCTransformRotationY;
    public readonly float NPCTransformRotationZ;
    public readonly float NPCTransformScaleX;
    public readonly float NPCTransformScaleY;
    public readonly float NPCTransformScaleZ;
   
    public const int __ID__ = -1039309373;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "NPCName:" + NPCName + ","
        + "NPCResPath:" + NPCResPath + ","
        + "NPCTransformPositionX:" + NPCTransformPositionX + ","
        + "NPCTransformPositionY:" + NPCTransformPositionY + ","
        + "NPCTransformPositionZ:" + NPCTransformPositionZ + ","
        + "NPCTransformRotationX:" + NPCTransformRotationX + ","
        + "NPCTransformRotationY:" + NPCTransformRotationY + ","
        + "NPCTransformRotationZ:" + NPCTransformRotationZ + ","
        + "NPCTransformScaleX:" + NPCTransformScaleX + ","
        + "NPCTransformScaleY:" + NPCTransformScaleY + ","
        + "NPCTransformScaleZ:" + NPCTransformScaleZ + ","
        + "}";
    }
}

}

