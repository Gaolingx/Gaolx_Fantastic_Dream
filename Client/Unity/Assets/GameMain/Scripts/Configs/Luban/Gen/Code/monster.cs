
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class monster : Luban.BeanBase
{
    public monster(JSONNode _buf) 
    {
        { if(!_buf["ID"].IsNumber) { throw new SerializationException(); }  ID = _buf["ID"]; }
        { if(!_buf["mName"].IsString) { throw new SerializationException(); }  MName = _buf["mName"]; }
        { if(!_buf["mType"].IsString) { throw new SerializationException(); }  MType = _buf["mType"]; }
        { if(!_buf["isStop"].IsString) { throw new SerializationException(); }  IsStop = _buf["isStop"]; }
        { if(!_buf["resPath"].IsString) { throw new SerializationException(); }  ResPath = _buf["resPath"]; }
        { if(!_buf["skillID"].IsNumber) { throw new SerializationException(); }  SkillID = _buf["skillID"]; }
        { if(!_buf["atkDis"].IsNumber) { throw new SerializationException(); }  AtkDis = _buf["atkDis"]; }
        { if(!_buf["hp"].IsNumber) { throw new SerializationException(); }  Hp = _buf["hp"]; }
        { if(!_buf["ad"].IsNumber) { throw new SerializationException(); }  Ad = _buf["ad"]; }
        { if(!_buf["ap"].IsNumber) { throw new SerializationException(); }  Ap = _buf["ap"]; }
        { if(!_buf["addef"].IsNumber) { throw new SerializationException(); }  Addef = _buf["addef"]; }
        { if(!_buf["apdef"].IsNumber) { throw new SerializationException(); }  Apdef = _buf["apdef"]; }
        { if(!_buf["dodge"].IsNumber) { throw new SerializationException(); }  Dodge = _buf["dodge"]; }
        { if(!_buf["pierce"].IsNumber) { throw new SerializationException(); }  Pierce = _buf["pierce"]; }
        { if(!_buf["critical"].IsNumber) { throw new SerializationException(); }  Critical = _buf["critical"]; }
    }

    public static monster Deserializemonster(JSONNode _buf)
    {
        return new monster(_buf);
    }

    public readonly int ID;
    public readonly string MName;
    public readonly string MType;
    public readonly string IsStop;
    public readonly string ResPath;
    public readonly int SkillID;
    public readonly float AtkDis;
    public readonly int Hp;
    public readonly int Ad;
    public readonly int Ap;
    public readonly int Addef;
    public readonly int Apdef;
    public readonly int Dodge;
    public readonly int Pierce;
    public readonly int Critical;
   
    public const int __ID__ = 1236617178;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "mName:" + MName + ","
        + "mType:" + MType + ","
        + "isStop:" + IsStop + ","
        + "resPath:" + ResPath + ","
        + "skillID:" + SkillID + ","
        + "atkDis:" + AtkDis + ","
        + "hp:" + Hp + ","
        + "ad:" + Ad + ","
        + "ap:" + Ap + ","
        + "addef:" + Addef + ","
        + "apdef:" + Apdef + ","
        + "dodge:" + Dodge + ","
        + "pierce:" + Pierce + ","
        + "critical:" + Critical + ","
        + "}";
    }
}

}

